{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# COVID-19 Data Visualization Dashboard\n",
    "\n",
    "This notebook provides an initial exploration and visualization of the COVID-19 dataset. The dataset contains daily new confirmed cases of COVID-19 per million people for various countries."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import plotly.express as px\n",
    "\n",
    "# Load the preprocessed dataset\n",
    "data_path = 'data/processed_data.csv'\n",
    "data = pd.read_csv(data_path)\n",
    "\n",
    "# Convert 'Date' column to datetime format\n",
    "data['Date'] = pd.to_datetime(data['Date'])\n",
    "\n",
    "# Display the first few rows of the dataset\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Filter Data for a Specific Country\n",
    "\n",
    "Let's filter the data for a specific country (e.g., Afghanistan) and visualize the daily new confirmed cases."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Filter data for a specific country (e.g., Afghanistan)\n",
    "country_data = data[data['Country'] == 'Afghanistan']\n",
    "\n",
    "# Plot the data\n",
    "fig = px.line(country_data, x='Date', y='Daily New Cases per Million',\n",
    "              title='Daily New Confirmed Cases of COVID-19 per Million People in Afghanistan',\n",
    "              labels={'Date': 'Date', 'Daily New Cases per Million': 'Daily New Cases per Million'})\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Summary Statistics\n",
    "\n",
    "Let's calculate some summary statistics for the selected country."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Summary statistics\n",
    "summary_stats = country_data.describe()\n",
    "summary_stats"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}